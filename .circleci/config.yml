# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/php:7.1-cli-stretch
      - image: circleci/mysql:8.0.4
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: tests
          MYSQL_USER: default
          MYSQL_PASSWORD: secret
        command: [--default-authentication-plugin=mysql_native_password]

    working_directory: ~/wp-separate-user-base

    steps:
      - checkout

        # zip: zlib1g-dev
        # gd: libjpeg62-turbo-dev libpng-dev libfreetype6-dev
      - run:
          name: Install packages
          command: |
            sudo apt-get update
            sudo apt-get install libfreetype6-dev \
                                 libjpeg62-turbo-dev \
                                 libpng-dev \
                                 mysql-client

      - run: sudo docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/

      - run: sudo docker-php-ext-install -j$(nproc) intl bcmath mysqli zip gd

      - run:
          name: Install pcov code coverage
          command: |
            sudo pecl install pcov
            sudo docker-php-ext-enable pcov

      - run:
          name: Setting up php.ini
          command: |
            sudo echo '
            display_errors = 1
            display_startup_errors = 1
            memory_limit = 512M
            error_reporting = -1
            pcov.initial.files = 1000
            ' | sudo tee -a  /usr/local/etc/php/conf.d/test.ini

      - restore_cache:
          keys:
            - php-dependencies-{{ checksum "composer.lock" }}

      - run:
          name: Install PHP dependencies
          command: |
            composer global require hirak/prestissimo
            composer install --no-interaction --prefer-dist

      - save_cache:
          paths:
            - vendor
            - ~/.composer/cache
          key: php-dependencies-{{ checksum "composer.lock" }}

      - run:
          name: Patch issues with WordPress test suite
          command: |
             grep -lr "@covers [_a-z]\{1,\}" . | xargs sed -i -e 's/@covers \([_a-z]\)/@covers \\\1/g'
          working_directory: ~/wp-separate-user-base/vendor/wordpress/phpunit/tests/phpunit/tests


      # Unit Tests
      - run:
          name: Add vendor bin path
          command: |
            echo 'export PATH=~/wp-separate-user-base/vendor/bin:$PATH' >> $BASH_ENV
            source ~/.bashrc

      - run:
          name: Creating common artefact dirs
          command: |
            mkdir -p ~/screenshots
            mkdir -p ~/test-results
            mkdir -p ~/code-coverage

      - run:
          name: Set up pcov
          command: |
            vendor/bin/pcov clobber
          working_directory: ~/wp-separate-user-base

      - run:
          name: Run core unit tests
          command: |
            php ~/wp-separate-user-base/vendor/bin/phpunit --coverage-html ~/code-coverage --log-junit ~/results/core.xml
      #php ~/wp-separate-user-base/vendor/bin/phpunit --coverage-html ~/code-coverage --log-junit ~/results/core.xml --debug
      #--coverage-php ~/code-coverage-tmp/coverage.cov

      # Store common artifacts
      - store_test_results:
          path: ~/test-results

      - store_artifacts:
          path: ~/test-results

      - store_artifacts:
          path: ~/code-coverage
